# Для обработки целого массива цен, я решила использовать счётчик, в который я возвращаю кол-во подсчитанных мною периодов плавного спуска
# Также я ввела переменную l, разницу между двумя ближайшими ценами, которая увеличивается на 1 с каждым разом
# Очевидно, что разница должна быть между двумя ближайшими ценами не больше 1
# Также было важно вернуть в ответе общее кол-во периодов плавного спуска, закончившихся при любом индексе цен, что я и учла
# сложность O(n)
class Solution:
    def getDescentPeriods(prices):
        result = 0                                   # счётчик с результатом равен 0
        l = 0                                        # цена дня равна 0 изначально
        for i in range(len(prices)):                 # проходимся по всем значениям цен
            l += 1                                   # инкрементируем счётчик после первого дня
            if (i+1 == len(prices)) or (prices[i]-1 != prices[i+1]):     # если цены отличаются каждый день на 1, т.е. имеют плавный спуск
                result += l*(l+1)//2                 # добавляем к результату кол-во периодов плавного спуска, которое мы подсчитали
                l = 0                                # обнуляем значение l
        return result                                # возвращаем кол-во периодов плавного спуска
